var documenterSearchIndex = {"docs":
[{"location":"components/#Solver-Components","page":"Solver Components","title":"Solver Components","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"CurrentModule = PowerModelsSecurityConstrained","category":"page"},{"location":"components/#Data-Wangling","page":"Solver Components","title":"Data Wangling","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These tools are used for parsing data files and translating data into the PowerModels internal data model.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"parse_c1_case\nbuild_c1_pm_model\nparse_c2_case\nbuild_c2_pm_model","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.parse_c1_case","page":"Solver Components","title":"PowerModelsSecurityConstrained.parse_c1_case","text":"Given an .ini file and a scenario id (i.e. a directory name), looks for and parses the files from ARPA-e GOC Challenge 1 data format.\n\n.raw network model\n.rop generator costs\n.con contingency set\n.inl generator contingency response parameters\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.build_c1_pm_model","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c1_pm_model","text":"transforms files from ARPA-e GOC Challenge 1 data format in to the PowerModels data format.  This consists of taking the data from multiple data structures and putting into a network data dictionary.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.parse_c2_case","page":"Solver Components","title":"PowerModelsSecurityConstrained.parse_c2_case","text":"Given an a directory path looks for and parses the files from ARPA-e GOC Challenge 2 data format.\n\n.raw  network model\n.con  contingency set\n.json additional model data\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.build_c2_pm_model","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c2_pm_model","text":"Transforms files from ARPA-e GOC Challenge 2 data format in to the PowerModels data format.  This consists of taking the data from multiple data structures and putting into a network data dictionary.\n\n\n\n\n\n","category":"function"},{"location":"components/#OPF-Formulations","page":"Solver Components","title":"OPF Formulations","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are standard OPF formulations (i.e. without contingency constraints) and are used as sub-processes in building contingency constrained solutions.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"run_c1_opf_shunt\nrun_c1_opf_cheap\nrun_c1_opf_cheap_lazy_acr\nbuild_c2_opf_soft\nbuild_c2_opf_soft_ctg","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_opf_shunt","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_opf_shunt","text":"An OPF formulation conforming to the ARPA-e GOC Challenge 1 specification. Power balance and branch flow constraints are strictly enforced. The primary departure from the PowerModels standard formulation is dispatchable bus shunts and a slight change in the transformer model.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_opf_cheap","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_opf_cheap","text":"An OPF formulation conforming to the ARPA-e GOC Challenge 1 specification. Power balance are strictly enforced and the branch flow violations are penalized based on a conservative linear approximation of the formulation's flow violation penalty specification.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_opf_cheap_lazy_acr","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_opf_cheap_lazy_acr","text":"A variant of run_opf_cheap model, specialized for solving very large AC Power Flow models in rectangular coordinates for faster derivative computations.  Support sparse collections of flow constrains for increased performance.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.build_c2_opf_soft","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c2_opf_soft","text":"\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.build_c2_opf_soft_ctg","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c2_opf_soft_ctg","text":"\n\n\n\n","category":"function"},{"location":"components/#OPF-with-UC-Formulations","page":"Solver Components","title":"OPF with UC Formulations","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are standard OPF formulations (i.e. without contingency constraints) with discrete variables for supporting the commitment of generation units.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"build_c2_opf_uc","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.build_c2_opf_uc","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c2_opf_uc","text":"\n\n\n\n","category":"function"},{"location":"components/#OTS-Formulations","page":"Solver Components","title":"OTS Formulations","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are standard transmission switching formulations (i.e. without contingency constraints) and are used to find economic improving topology changes in a network.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"build_c2_ots_soft","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.build_c2_ots_soft","page":"Solver Components","title":"PowerModelsSecurityConstrained.build_c2_ots_soft","text":"\n\n\n\n","category":"function"},{"location":"components/#Contingency-Filters","page":"Solver Components","title":"Contingency Filters","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are tools for checking for constraint violations in contingencies","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"check_c1_contingency_violations\ncheck_c1_contingencies_branch_power\ncheck_c1_contingencies_branch_power_bpv","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.check_c1_contingency_violations","page":"Solver Components","title":"PowerModelsSecurityConstrained.check_c1_contingency_violations","text":"Checks a given operating point against the contingencies to look for branch flow violations.  The DC Power Flow approximation is used for flow simulation. Returns a list of contingencies where a violation is found.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.check_c1_contingencies_branch_power","page":"Solver Components","title":"PowerModelsSecurityConstrained.check_c1_contingencies_branch_power","text":"Checks a given operating point against the contingencies to look for branch flow violations.  The DC Power Flow approximation is used for flow simulation. If a violation is found, computes a PTDF cut based on bus injections.  Uses the participation factor based generator response model from the ARPA-e GOC Challenge 1 specification.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.check_c1_contingencies_branch_power_bpv","page":"Solver Components","title":"PowerModelsSecurityConstrained.check_c1_contingencies_branch_power_bpv","text":"A variant of check_contingencies_branch_flow_remote, which ignores the participation factor based generator response model from the ARPA-e GOC Challenge 1 specification and instead injects active power equally at all buses in the network.\n\n\n\n\n\n","category":"function"},{"location":"components/#SCOPF-Formulations","page":"Solver Components","title":"SCOPF Formulations","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are contingency constrained OPF formulations.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"run_c1_scopf\nrun_c1_scopf_cuts_soft\nrun_c1_scopf_cuts_soft_bpv\nrun_c1_scopf_contigency_cuts\nrun_c1_scopf_ptdf_cuts!","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_scopf","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_scopf","text":"An academic SCOPF formulation inspired by the ARPA-e GOC Challenge 1 specification. Power balance and line flow constraints are strictly enforced in the first stage and contingency stages.\n\nThis formulation is best used in conjunction with the contingency filters that find violated contingencies.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_scopf_cuts_soft","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_scopf_cuts_soft","text":"An SCOPF formulation conforming to the ARPA-e GOC Challenge 1 specification. A DC power flow approximation is used. Power balance and line flow constraints are strictly enforced in the first stage.  Contingency branch flow constraints are enforced by PTDF cuts and penalized based on a conservative linear approximation of the formulation's specification.\n\nThis formulation is used in conjunction with the contingency filters that generate PTDF cuts.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_scopf_cuts_soft_bpv","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_scopf_cuts_soft_bpv","text":"a variant of run_c1_scopf_cuts_dc_soft with a different generator response function\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_scopf_contigency_cuts","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_scopf_contigency_cuts","text":"Solves a SCOPF problem by iteratively checking for violated contingencies and resolving until a fixed-point is reached\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_scopf_ptdf_cuts!","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_scopf_ptdf_cuts!","text":"Solves a SCOPF problem by iteratively checking for violated branch flow constraints in contingencies and resolving until a fixed-point is reached.\n\nThe base-case model is formulation agnostic.  The flow cuts are based on PTDF and utilize the DC Power Flow assumption.\n\n\n\n\n\n","category":"function"},{"location":"components/#Contingency-Stage-Solvers","page":"Solver Components","title":"Contingency-Stage Solvers","text":"","category":"section"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"These are solvers for quickly solving large collections of contingencies. These solvers are usually more detailed on than the models used in the contingency filters.","category":"page"},{"location":"components/","page":"Solver Components","title":"Solver Components","text":"run_c1_fixpoint_pf_pvpq!\nrun_c1_fixpoint_pf_bqv!","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_fixpoint_pf_pvpq!","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_fixpoint_pf_pvpq!","text":"A power flow solver conforming to the ARPA-e GOC Challenge 1 contingency-stage specification.  The solver conducts multiple rounds of PV/PQ bus switching to heuristically enforce the disjunctive constraints.\n\n\n\n\n\n","category":"function"},{"location":"components/#PowerModelsSecurityConstrained.run_c1_fixpoint_pf_bqv!","page":"Solver Components","title":"PowerModelsSecurityConstrained.run_c1_fixpoint_pf_bqv!","text":"A power flow solver inspired by the ARPA-e GOC Challenge 1 contingency-stage specification but designed to be faster on large network cases. Instead conducting PV/PQ bus switching address disjunctive constraints, this solver simply adds extra reactive capability on buses where the voltage bounds cannot be enforced and takes an associated power balance penalty.\n\n\n\n\n\n","category":"function"},{"location":"#PowerModelsSecurityConstrained-Documentation","page":"Home","title":"PowerModelsSecurityConstrained Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PowerModelsSecurityConstrained","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides an extension to PowerModels for Security-Constrained Optimization problems.  The core routines provided in this software have been used in the benchmark algorithm of ARPA-e's grid optimization competitions.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The latest stable release of PowerModelsSecurityConstrained can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add PowerModelsSecurityConstrained","category":"page"},{"location":"","page":"Home","title":"Home","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add PowerModelsSecurityConstrained#master","category":"page"},{"location":"","page":"Home","title":"Home","text":"At least one solver is required for running PowerModelsSecurityConstrained.  The open-source solver Ipopt is recommended, as it is fast, scalable and can be used to solve a wide variety of the problems and network formulations provided in PowerModels.  The Ipopt solver can be installed via the package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add Ipopt","category":"page"},{"location":"","page":"Home","title":"Home","text":"Test that the package works by running","category":"page"},{"location":"","page":"Home","title":"Home","text":"] test PowerModelsSecurityConstrained","category":"page"},{"location":"#ARPA-e-SCOPF-Benchmark","page":"Home","title":"ARPA-e SCOPF Benchmark","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PowerModelsSecurityConstrained includes a variety of tools for solving problems with contingency constraints.  The src/script directory includes the specific algorithms that were submitted to the final event in ARPA-e's Grid Optimization Competition Challenge 1 in October 2019 and Challenge 2 in September 2021.","category":"page"}]
}
